buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.freefair.lombok' version '8.0.1'
    id "net.kyori.blossom" version "1.3.1"
    id 'java'
    id 'jacoco'
    id 'idea'
}

apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/publish.gradle"

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}

ext {
    mcVersion = project.property("mcVersion")
}

group project.property("group")

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'net.kyori.blossom'

    group project.property("group")

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url = "https://repo.georgev22.com/releases/" }
        maven { url = "https://repo.georgev22.com/snapshots/" }
        maven { url = 'https://repo.codemc.org/repository/maven-public/' }
        maven { url = 'https://repo.papermc.io/repository/maven-public/' }
        maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/public/' }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url = 'https://nexus.velocitypowered.com/repository/maven-public/' }
        maven { url = 'https://repo.dmulloy2.net/repository/public/' }
        maven { url = 'https://repo.inventivetalent.org/repository/public/' }
        maven { url = 'https://jitpack.io' }
    }

    dependencies {
        compileOnly "com.georgev22.library:database:${libraryVersion}"
        compileOnly "com.georgev22.library:maps:${libraryVersion}"
        compileOnly "com.georgev22.library:scheduler:${libraryVersion}"
        compileOnly "com.georgev22.library:utilities:${libraryVersion}"
        compileOnly "com.georgev22.library:yaml:${libraryVersion}"
        compileOnly "com.georgev22.library:minecraft:${libraryVersion}"

        compileOnly "com.georgev22.api:libraryloader:${libraryLoaderVersion}"

        compileOnly "co.aikar:acf-paper:${acfVersion}"
        compileOnly "co.aikar:acf-bungee:${acfVersion}"
        compileOnly "co.aikar:acf-velocity:${acfVersion}"

        compileOnly "org.bstats:bstats-bukkit:${bstatsVersion}"
        compileOnly "org.bstats:bstats-bungeecord:${bstatsVersion}"
        compileOnly "org.bstats:bstats-velocity:${bstatsVersion}"

        compileOnly "net.skinsrestorer:skinsrestorer-api:${skinsRestorerVersion}"

        compileOnly "net.kyori:adventure-api:${adventureVersion}"
        compileOnly "net.kyori:adventure-text-serializer-legacy:${adventureVersion}"

        compileOnly "org.apache.logging.log4j:log4j-api:${log4jVersion}"

        compileOnly "com.google.code.gson:gson:${gsonVersion}"
        compileOnly "com.google.guava:guava:${guavaVersion}"

        compileOnly "org.jetbrains:annotations:${jetbrainsAnnotationsVersion}"

        compileOnly "commons-codec:commons-codec:${commonscodecVersion}"
        compileOnly "commons-io:commons-io:${commonsioVersion}"
        compileOnly "commons-lang:commons-lang:${commonslangVersion}"

        compileOnly "org.mongodb:mongodb-driver:${mongodbVersion}"

        compileOnly "com.mojang:authlib:${authlibVersion}"

        compileOnly "com.github.aematsubara:MineskinClient:${mineskinVersion}"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = "https://repo.georgev22.com/releases/" }
    maven { url = "https://repo.georgev22.com/snapshots/" }
    maven { url = 'https://repo.codemc.org/repository/maven-public/' }
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/public/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url = 'https://nexus.velocitypowered.com/repository/maven-public/' }
    maven { url = 'https://repo.dmulloy2.net/repository/public/' }
}

dependencies {
    implementation "com.georgev22.library:database:${libraryVersion}"
    implementation "com.georgev22.library:maps:${libraryVersion}"
    implementation "com.georgev22.library:scheduler:${libraryVersion}"
    implementation "com.georgev22.library:utilities:${libraryVersion}"
    implementation "com.georgev22.library:yaml:${libraryVersion}"
    implementation "com.georgev22.library:minecraft:${libraryVersion}"

    implementation "com.georgev22.api:libraryloader:${libraryLoaderVersion}"

    implementation "co.aikar:acf-paper:${acfVersion}"
    implementation "co.aikar:acf-bungee:${acfVersion}"
    implementation "co.aikar:acf-velocity:${acfVersion}"

    implementation "org.bstats:bstats-bukkit:${bstatsVersion}"
    implementation "org.bstats:bstats-bungeecord:${bstatsVersion}"
    implementation "org.bstats:bstats-velocity:${bstatsVersion}"

    implementation "net.kyori:adventure-platform-bukkit:${adventurePlatformVersion}"
    implementation "net.kyori:adventure-platform-bungeecord:${adventurePlatformVersion}"

    implementation "com.google.code.gson:gson:${gsonVersion}"

    implementation "io.papermc:paperlib:${paperlibVersion}"

    implementation "com.github.aematsubara:MineskinClient:${mineskinVersion}"

    implementation project(path: ':core')
    implementation project(path: ':bukkit')
    implementation project(path: ':bungee')
    implementation project(path: ':velocity')
    implementation project(path: ':multiver:mc-1-17', configuration: 'reobf')
    implementation project(path: ':multiver:mc-1-18', configuration: 'reobf')
    implementation project(path: ':multiver:mc-1-18-2', configuration: 'reobf')
    implementation project(path: ':multiver:mc-1-19', configuration: 'reobf')
    implementation project(path: ':multiver:mc-1-19-3', configuration: 'reobf')
    implementation project(path: ':multiver:mc-1-19-4', configuration: 'reobf')
    implementation project(path: ':multiver:mc-1-20', configuration: 'reobf')
    implementation project(path: ':multiver:mc-1-20-2', configuration: 'reobf')
}

shadowJar {
    archiveClassifier.set('')
    exclude("org/jsoup/**")
    relocate 'org.mineskin', "${packageName}.mineskin"
    relocate 'com.google.gson', "${packageName}.gson"
    relocate 'co.aikar.commands', "${packageName}.commands.acf"
    relocate 'co.aikar.locales', "${packageName}.commands.acf.locales"
    relocate 'org.bstats', "${packageName}.bstats"
    relocate 'com.georgev22.api.libraryloader', "${packageName}.libraryloader"
    relocate 'com.georgev22.library', "${packageName}.library"
    relocate 'org.yaml.snakeyaml', "${packageName}.snakeyaml"
    relocate 'io.papermc.lib', "${packageName}.paperlib"
}

jar {
    manifest {
        attributes["MixinConfigs"] = "mixins.skinoverlay.json"
    }
}

tasks.build.dependsOn(shadowJar)
tasks.publish.dependsOn(shadowJar)

processResources {
    filesMatching('**.yml') {
        project.properties.put('pluginName', this.pluginName)
        project.properties.put("version", this.version)
        project.properties.put("bungeeMain", this.bungeeMain)
        project.properties.put("author", this.author)
        expand project.properties
        filteringCharset 'UTF-8'
        expand project.properties
    }
}

defaultTasks 'build'